---
##################################
## DOCKER INSTALL

- name: 'install docker dependencies'
  become: true
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
    update_cache: 'yes'
    state: present

- name: 'add docker repo apt key'
  become: true
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: 'present'
  register: 'add_repository_key'
  ignore_errors: true

- name: 'add Docker repository'
  become: true
  apt_repository:
    repo: '{{ docker_apt_repository }}'
    state: 'present'
    update_cache: 'yes'

- name: 'install docker'
  become: true
  apt:
    name: '{{ docker_version }}'
    state: 'present'

##################################

##################################
## RESTARD DOCKER AND REMOVE CONTAINER ##

- name: 'enable docker systemd service'
  become: true
  service:
    name: 'docker'
    state: 'started'
    enabled: 'yes'

## REMOVE ALL CONTAINER STOPPED IN DOCKER INSTANCE ##

- name: 'set periodic docker system prune'
  become: true
  cron:
    name: 'docker-prune'
    minute: '0'
    hour: '*/2'
    job: 'docker container prune -f'

##################################

##################################
## DOCKER SWARM ##

- name: Check if Swarm is already initialized
  become: true
  shell: docker node ls
  register: swarm_status
  ignore_errors: true
  when: "'managers' in group_names "

- name: Information du Docker
  become: true
  shell: docker info
  register: docker_info
  changed_when: False

- name: creation manager
  become: true
#  state: installed
  shell: docker swarm init --advertise-addr={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:2377
  when:
    - "'managers' in group_names "
    - "docker_info.stdout.find('Swarm: inactive') != -1"

- name: "get docker swarm manager token"
  become: true
  shell: "docker swarm join-token -q manager"
  register: manager_token
  when: "'managers' in group_names "

- name: "get docker swarm worker token"
  become: true
  shell: "docker swarm join-token -q worker"
  register: worker_token
  when: "'managers' in group_names "

#################################
